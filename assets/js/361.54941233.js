(window.webpackJsonp=window.webpackJsonp||[]).push([[361],{1009:function(t,e,n){"use strict";n.r(e);var s=n(9),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("TitleSpan",[t._v(t._s(t.$frontmatter.folder))]),t._v(" "),n("h1",{attrs:{id:"frontmatter-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),n("VersionWarning"),t._v(" "),n("TocHeader"),t._v(" "),n("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),n("p",[t._v("Airnode serves APIs to blockchains according to\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/specifications/ois.html"}},[t._v("Oracle Integration Specifications (OIS)")]),t._v(".\nAPIs are composed of\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/specifications/ois.html#_5-2-operation"}},[t._v("operations")]),t._v(", which represent\nindividual functionalities that an API offers. OIS maps each API operation to an\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/specifications/ois.html#_5-endpoints"}},[t._v("endpoint")]),t._v(", which can be\nthought of as an Airnode operation. The endpoints that an Airnode will serve\nover the requestâ€“response protocol are listed under\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/deployment-files/config-json.html#triggers"}},[t._v("triggers")]),t._v(" of\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/deployment-files/config-json.html"}},[t._v("config.json")]),t._v(".")],1),t._v(" "),n("h2",{attrs:{id:"endpointid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#endpointid"}},[t._v("#")]),t._v(" "),n("code",[t._v("endpointId")])]),t._v(" "),n("blockquote",[n("p",[t._v("You can use the "),n("RouterLink",{attrs:{to:"/airnode/v0.3/reference/packages/admin-cli.html"}},[t._v("admin CLI")]),t._v(" to derive the\nendpoint id from your terminal")],1)]),t._v(" "),n("p",[n("code",[t._v("endpointId")]),t._v(" identifies specific endpoints that an Airnode serves, and is\ncomputed in JS (using ethers.js) as follows:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("ethers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  ethers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultAbiCoder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("oisTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endpointName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("Note that this means that an "),n("code",[t._v("endpointId")]),t._v(" is not unique, and two Airnodes can\nserve equivalent endpoints using the same ID (in fact, this is the desired\noutcome).This is not an issue, as requests are made with a "),n("code",[t._v("airnode")]),t._v(" (Airnode's\n"),n("code",[t._v("address")]),t._v(") and "),n("code",[t._v("endpointId")]),t._v(" pair.")]),t._v(" "),n("p",[t._v("This convention of determining an "),n("code",[t._v("endpointId")]),t._v(" is not enforced at the\nprotocol-level. For example, one could choose to generate an "),n("code",[t._v("endpointId")]),t._v("\nrandomly, and as long as requesters use the correct "),n("code",[t._v("endpointId")]),t._v(", this will not\nbe an issue.")]),t._v(" "),n("h2",{attrs:{id:"authorizers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#authorizers"}},[t._v("#")]),t._v(" Authorizers")]),t._v(" "),n("p",[t._v("Airnodes can assign a list of authorizers to their endpoints. See the section\n"),n("RouterLink",{attrs:{to:"/airnode/v0.3/concepts/authorization.html"}},[t._v("Authorizer")]),t._v(" for more information.")],1)],1)}),[],!1,null,null,null);e.default=a.exports}}]);