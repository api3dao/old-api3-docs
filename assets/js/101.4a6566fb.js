(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{567:function(t,e,a){t.exports=a.p+"assets/img/gateway.d7840994.png"},977:function(t,e,a){"use strict";a.r(e);var s=a(9),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("TitleSpan",[t._v(t._s(t.$frontmatter.folder))]),t._v(" "),s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),s("VersionWarning"),t._v(" "),s("TocHeader"),t._v(" "),s("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),s("p",[t._v("As part of the Airnode deployment you can decide to deploy an HTTP Gateway. The\ngateway allows the testing of defined Airnode endpoints without accessing the\nblockchain. You provide endpoint arguments directly to the Airnode with a tool.\nof your choice and get a response from an integrated API operation. This results\nin confirmation your integration is set up properly. The HTTP gateway feature is\nonly available when deploying an Airnode to a cloud provider's serverless\nservice.")]),t._v(" "),s("blockquote",[s("p",[s("img",{attrs:{src:a(567),alt:"gateway"}})])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("HTTP Gateway (optional)")]),t._v(" "),s("p",[t._v("Using the HTTP gateway functionality with Airnode is optional.")])]),t._v(" "),s("h2",{attrs:{id:"setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),s("p",[t._v("Enable the HTTP gateway by setting two fields in the config.json\n("),s("code",[t._v("nodeSettings.httpGateway")]),t._v(").")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("enabled")]),t._v(": A boolean setting enable/disable for the Airnode's HTTP gateway.")]),t._v(" "),s("li",[s("strong",[t._v("apiKey")]),t._v(": A user defined API key to authenticate against the gateway. The\nkey must have a length of between 30 - 120 characters.")])]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nodeSettings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cloudProvider"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aws"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"airnodeWalletMnemonic"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${AIRNODE_WALLET_MNEMONIC}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"heartbeat"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"httpGateway"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apiKey"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${HTTP_GATEWAY_API_KEY}"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("You must also add the\n"),s("RouterLink",{attrs:{to:"/airnode/v0.2/reference/specifications/ois.html#_5-9-testable"}},[t._v("testable")]),t._v(" boolean flag\nfor each endpoint you want to test in the OIS ("),s("code",[t._v("ois.endpoints[n]testable")]),t._v("). This\nindicates whether the endpoint can be used via HTTP gateway or not. Itâ€™s\noptional and by default is false.")],1),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in config.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ois.endpoints[n].testable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ois"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"endpoints"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"convertToUSD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"operation"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"testable"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  ...\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"gateway-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gateway-url"}},[t._v("#")]),t._v(" Gateway URL")]),t._v(" "),s("p",[t._v("A gateway URL is generated when your Airnode is deployed. You can obtain the URL\n("),s("code",[t._v("api.httpGatewayUrl")]),t._v(") from the receipt.json file returned by the deployer or as\npart of a request sent from Airnode's "),s("RouterLink",{attrs:{to:"/airnode/v0.2/grp-providers/guides/build-an-airnode/heartbeat.html"}},[t._v("heartbeat")]),t._v(" to your\nspecified heartbeat URL.")],1),t._v(" "),s("h2",{attrs:{id:"using-curl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-curl"}},[t._v("#")]),t._v(" Using CURL")]),t._v(" "),s("p",[t._v("In order to test an endpoint, via the HTTP gateway, make an HTTP POST request\nwith endpointId as a path parameter, the x-api-key in the header and endpoint\nparameters in the request body. As an alternative to CURL try an app such as\n"),s("a",{attrs:{href:"https://insomnia.rest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Insomnia"),s("OutboundLink")],1),t._v(" or\n"),s("a",{attrs:{href:"https://www.postman.com/product/rest-client/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Postman"),s("OutboundLink")],1),t._v(". Windows users can also\nuse\n"),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/wsl/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows Subsystem for Linux"),s("OutboundLink")],1),t._v("\n(WSL2) to run CURL for Linux.")]),t._v(" "),s("ul",[s("li",[t._v("An "),s("code",[t._v("endpointId")]),t._v(" can found in config.json under "),s("code",[t._v("triggers[n].endpointId")]),t._v(".")]),t._v(" "),s("li",[t._v("The "),s("code",[t._v("x-api-key")]),t._v(" can found in config.json under\n"),s("code",[t._v("nodesettings.httpGateway.apiKey")]),t._v(".")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("parameter")]),t._v(" "),s("th",[t._v("in")]),t._v(" "),s("th",[t._v("CURL options")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("x-api-key")]),t._v(" "),s("td",[t._v("header")]),t._v(" "),s("td",[s("code",[t._v("-H 'x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e'")])])]),t._v(" "),s("tr",[s("td",[t._v("endpointId")]),t._v(" "),s("td",[t._v("path")]),t._v(" "),s("td",[s("code",[t._v("0x6db9e3e3d...c7025f5c27af6")])])]),t._v(" "),s("tr",[s("td",[t._v("<user-defined>")]),t._v(" "),s("td",[t._v("body")]),t._v(" "),s("td",[s("code",[t._v('-d \'{"parameters": {"param1": "string", "param2": 5}}\'')])])])])]),t._v(" "),s("p",[t._v("Replace "),s("code",[t._v("<httpGatewayUrl>")]),t._v(" in the example below with your gateway URL from the\n"),s("code",[t._v("receipt.json")]),t._v(" file using the "),s("code",[t._v("httpGatewayUrl")]),t._v(" field. The\n"),s("RouterLink",{attrs:{to:"/airnode/v0.2/grp-providers/guides/build-an-airnode/deploying-airnode.html#receipt-json"}},[t._v("receipt.json")]),t._v(" file is created when you\ndeploy an Airnode.")],1),t._v(" "),s("p",[t._v("Request:")]),t._v(" "),s("Tabs",{attrs:{type:"border-card"}},[s("Tab",{attrs:{label:"Linux/Mac/WSL2"}},[s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"parameters": {"param1": "string", "param2": 5}}\'')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<httpGatewayUrl>/0xf466b8feec...99e9f9f90453c'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])]),t._v(" "),s("Tab",{attrs:{label:"Windows"}},[s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x-api-key: 8d890a46-799d-48b3-a337-8531e23dfe8e"')]),t._v(" ^\n-d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{'),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": {"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("param1"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("string"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("param2"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(': 5}}"')]),t._v(" ^\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("httpGatewayUrl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/0xf466b8feec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".99e9f9f90453c\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])],1),t._v(" "),s("p",[t._v("Response:")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("The response format is a simple JSON object: "),s("code",[t._v('{"value": <return value>}')]),t._v(".")])],1)}),[],!1,null,null,null);e.default=n.exports}}]);