(window.webpackJsonp=window.webpackJsonp||[]).push([[742],{1518:function(a,t,s){"use strict";s.r(t);var e=s(9),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("TitleSpan",[a._v(a._s(a.$frontmatter.folder))]),a._v(" "),s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[a._v("#")]),a._v(" "+a._s(a.$frontmatter.title))]),a._v(" "),s("TocHeader"),a._v(" "),s("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),a._v(" "),s("p",[a._v("For on-chain smart contracts, the function\n"),s("a",{attrs:{href:"https://github.com/api3dao/airnode-protocol-v1/blob/v0.5.0/contracts/dapis/DapiServer.sol#L771-L781",target:"_blank",rel:"noopener noreferrer"}},[a._v("readerCanReadDataFeed()"),s("OutboundLink")],1),a._v("\nreturns true if the "),s("code",[a._v("reader")]),a._v(" parameter can access the "),s("code",[a._v("dataFeedId")]),a._v(" parameter\nmeaning that the reader address has read access. See\n"),s("RouterLink",{attrs:{to:"/dapis/developers/#coverage-policies"}},[a._v("Coverage Policies")]),a._v(" for more information about dAPI read\naccess.")],1),a._v(" "),s("h2",{attrs:{id:"example-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[a._v("#")]),a._v(" Example Usage")]),a._v(" "),s("div",{staticClass:"language-solidity line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// SPDX-License-Identifier: MIT")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("pragma")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("solidity")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.8")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("contract")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("mySmartContract")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("myVerifyReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("address")]),a._v(" _dapiServerContractAddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("bytes32")]),a._v(" _datafeedId\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("external")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("bool")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" canRead"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Calling the DapiServer for reader status")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// where "this" is the contract address of this contract (myVerifyReadable).')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("canRead"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("IDapiServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("_dapiServerContractAddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("readerCanReadDataFeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("_datafeedId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h2",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("p",[s("code",[a._v("readerCanReadDataFeed(bytes32 datafeedId, address reader)")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("bytes32 datafeedId")]),a._v(" - The ID of a dAPI, Beacon, or Beacon set.")]),a._v(" "),s("li",[s("code",[a._v("address reader")]),a._v(" - The address to verify such as the reader's smart contract\naddress or another address.")])]),a._v(" "),s("h3",{attrs:{id:"using-a-dapiname-for-the-datafeedid-parameter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-a-dapiname-for-the-datafeedid-parameter"}},[a._v("#")]),a._v(" Using a "),s("code",[a._v("dapiName")]),a._v(" for the "),s("code",[a._v("datafeedId")]),a._v(" parameter")]),a._v(" "),s("p",[a._v("If you want to check the status using a "),s("code",[a._v("dapiName")]),a._v(", first encode the "),s("code",[a._v("dapiName")]),a._v("\nto bytes32 and calculate the off-chain hash of the "),s("code",[a._v("encodedDapiName")]),a._v(" as shown\nbelow. Then pass the value of "),s("code",[a._v("dapiNameHash")]),a._v(" as "),s("code",[a._v("_datafeedId")]),a._v(" in the code\nexample above. Try it in the\n"),s("a",{attrs:{href:"https://playground.ethers.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ethers playground"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("div",{staticClass:"language-solidity line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// First encode the dapiName (such as AVAX/USD) to bytes32")]),a._v("\nencodedDapiName "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ethers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("formatBytes32String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"AVAX/USD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// encodedDapiName now equals")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 0x415641582f555344000000000000000000000000000000000000000000000000")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Then calculate the off-chain hash")]),a._v("\ndapiNameHash "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ethers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("solidityKeccak256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bytes32'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("encodedDapiName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// dapiNameHash now equals")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 0xcc06defee290c6e46f55823e39eb14024b06d4a6c7a0b6bf8b1f1e229c389b9c")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h2",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("bool")]),a._v(" - Whether the address passed is whitelisted and therefore can read the\ndAPI, Beacon, or Beacon set ID passed.")])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);