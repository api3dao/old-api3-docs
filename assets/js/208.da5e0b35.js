(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{1572:function(e,t,r){"use strict";r.r(t);var n=r(9),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("TitleSpan",[e._v(e._s(e.$frontmatter.folder))]),e._v(" "),n("h1",{attrs:{id:"frontmatter-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),n("TocHeader"),e._v(" "),n("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),e._v(" "),n("p",[e._v("The API3 QRNG service is implemented using the Airnode request–response protocol\ncontract,\n"),n("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/AirnodeRrpV0.sol",target:"_blank",rel:"noopener noreferrer"}},[e._v("AirnodeRrpV0"),n("OutboundLink")],1),e._v(",\nto acquire a random number.")]),e._v(" "),n("p",[e._v("Upon request, "),n("RouterLink",{attrs:{to:"/airnode/v0.9/"}},[e._v("Airnode")]),e._v(" calls a designated API operation and\nacquires a random number and then delivers it on-chain, via the "),n("code",[e._v("AirnodeRrpV0")]),e._v("\nprotocol contract, to a requester.")],1),e._v(" "),n("p",[e._v("In the diagram below a requester (smart contract) submits a request for a random\nnumber to "),n("code",[e._v("AirnodeRrpV0")]),e._v(". Airnode gathers the request from the "),n("code",[e._v("AirnodeRrpV0")]),e._v("\nprotocol contract, gets the random number from an API operation and sends it\nback to "),n("code",[e._v("AirnodeRrpV0")]),e._v(". Once received, "),n("code",[e._v("AirnodeRrpV0")]),e._v(" performs a callback to the\nrequester with the random number.")]),e._v(" "),n("blockquote",[n("img",{attrs:{src:r(742),width:"400"}})]),e._v(" "),n("p",[e._v("Calling "),n("code",[e._v("AirnodeRrpV0")]),e._v(" for a random number is the same as any other Airnode\nrequest. Read more about how a requester\n"),n("RouterLink",{attrs:{to:"/airnode/v0.9/grp-developers/"}},[e._v("accesses an Airnode")]),e._v(" to acquire data from API\noperations.")],1),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Gas Costs")]),e._v(" "),n("p",[e._v("Using the QRNG service is free, meaning there is no subscription fee to pay.\nThere is a gas cost incurred on-chain when Airnode places the random number\non-chain in response to a request, which the requester needs to pay for.")])]),e._v(" "),n("h2",{attrs:{id:"requesters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#requesters"}},[e._v("#")]),e._v(" Requesters")]),e._v(" "),n("p",[e._v("A requester (smart contract) calls the QRNG service using the "),n("em",[e._v("request–response\nprotocol (RRP)")]),e._v(" implemented by the on-chain "),n("code",[e._v("AirnodeRrpV0")]),e._v(" contract. The\ncontract\n"),n("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/requesters/RrpRequesterV0.sol",target:"_blank",rel:"noopener noreferrer"}},[e._v("RrpRequesterV0.sol"),n("OutboundLink")],1),e._v("\nis meant to be inherited by any requester that will be making requests to\nAirnodeRrpV0. It is part of the NPM\n"),n("a",{attrs:{href:"https://www.npmjs.com/package/@api3/airnode-protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("@api3/airnode-protocol"),n("OutboundLink")],1),e._v("\npackage.")]),e._v(" "),n("p",[e._v("In practice, the requester implements two functions that are specific to\n"),n("em",[e._v("requesting")]),e._v(" and "),n("em",[e._v("receiving")]),e._v(" a random number from the QRNG service. Consider the\nfollowing flow (extracted from the\n"),n("a",{attrs:{href:"https://github.com/api3dao/qrng-example/blob/main/contracts/QrngExample.sol",target:"_blank",rel:"noopener noreferrer"}},[e._v("QRNG example contract"),n("OutboundLink")],1),e._v(")\nto understand how to call for a random number.")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("The function "),n("code",[e._v("makeRequestUint256()")]),e._v(" calls "),n("code",[e._v("airnodeRrp.makeFullRequest()")]),e._v(" to\nrequest a random number, which in turn returns a "),n("code",[e._v("requestId")]),e._v(". The "),n("code",[e._v("requestId")]),e._v("\nis stored in the mapping "),n("code",[e._v("expectingRequestWithIdToBeFulfilled")]),e._v(" for reference\nin the callback function.")])]),e._v(" "),n("li",[n("p",[e._v("The function "),n("code",[e._v("fulfillUint256")]),e._v(" is the callback to receive the random number\nfrom the QRNG service. The callback contains the "),n("code",[e._v("requestId")]),e._v(" returned by the\ninitial request and the "),n("code",[e._v("data")]),e._v(", which contains the random number. The\n"),n("code",[e._v("requestId")]),e._v(" is verified and removed from the mapping\n"),n("code",[e._v("expectingRequestWithIdToBeFulfilled")]),e._v(".")])])]),e._v(" "),n("p",[e._v("An additional pair of functions\n("),n("a",{attrs:{href:"https://github.com/api3dao/qrng-example/blob/main/contracts/QrngExample.sol#L98-L113",target:"_blank",rel:"noopener noreferrer"}},[e._v("makeRequestUint256Array()"),n("OutboundLink")],1),e._v("\nand\n"),n("a",{attrs:{href:"https://github.com/api3dao/qrng-example/blob/main/contracts/QrngExample.sol#L115-L131",target:"_blank",rel:"noopener noreferrer"}},[e._v("fulfillUint256Array()"),n("OutboundLink")],1),e._v(")\ncan be used to acquire an array of random numbers.")])],1)}),[],!1,null,null,null);t.default=o.exports},742:function(e,t,r){e.exports=r.p+"assets/img/access-overview.d0897ebd.png"}}]);