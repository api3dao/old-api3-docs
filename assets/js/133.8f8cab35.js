(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{1148:function(e,t,o){"use strict";o.r(t);var a=o(9),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("TitleSpan",[e._v(e._s(e.$frontmatter.folder))]),e._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("VersionWarning"),e._v(" "),a("p",[e._v("A "),a("strong",[e._v("developer")]),e._v(" is you, if you wish to consume off-chain data from APIs. You do\nso using Airnodes. An Airnode is a first-party oracle that pushes off-chain API\ndata to your on-chain contract. In the diagram below, your contract is called a\nrequester. It makes a request to the on-chain RRP protocol contract\n(AirnodeRrp.sol) that adds the request to the event logs. The off-chain Airnode\nthen accesses the event logs, gets the API data and performs a callback to the\nrequester.")]),e._v(" "),a("p",[e._v("In summary, you only need to do two things.")]),e._v(" "),a("ul",[a("li",[e._v("Call "),a("code",[e._v("makeFullRequest()")]),e._v(" or "),a("code",[e._v("makeTemplateRequest()")]),e._v(" on the AirnodeRrp.sol\ncontract, which returns a "),a("RouterLink",{attrs:{to:"/airnode/v0.5/concepts/request.html#requestid"}},[a("code",[e._v("requestId")])]),e._v(".")],1),e._v(" "),a("li",[e._v("Add a "),a("code",[e._v("myFulfill()")]),e._v(" function (call it what you like) to your requester (your\ncontract) where the off-chain Airnode can send the requested data when ready.\nThe data includes the same "),a("code",[e._v("requestId")]),e._v(" as the one returned at the time of\nmaking the request.")])]),e._v(" "),a("blockquote",[a("img",{attrs:{src:o(615),width:"550px"}}),e._v(" "),a("ol",[a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"black"}},[e._v("The requester (myContract.sol) makes a request to the RRP protocol contract (AirnodeRrp.sol) by calling "),a("code",[e._v("makeFullRequest()")]),e._v(" which adds the request to the event logs and returns a "),a("code",[e._v("requestId")]),e._v(" to the requester.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"black"}},[e._v("Airnode retrieves the on-chain request from the event logs.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"green"}},[e._v("Airnode gathers response data from the API specified in the request.")])]),e._v(" "),a("li",[a("p",{staticClass:"diagram-line",staticStyle:{color:"blue"}},[e._v("Airnode performs a callback to a named function "),a("code",[e._v("myFulfill()")]),e._v(" in myContract.sol via the AirnodeRrp.sol function "),a("code",[e._v("fulfill()")]),e._v(" with the requested data and the "),a("code",[e._v("requestId")]),e._v(".")])])])]),e._v(" "),a("p",[e._v("For a more detailed diagram see the first image in the\n"),a("RouterLink",{attrs:{to:"/airnode/v0.5/grp-developers/call-an-airnode.html"}},[e._v("Calling an Airnode")]),e._v(" doc.")],1)],1)}),[],!1,null,null,null);t.default=r.exports},615:function(e,t,o){e.exports=o.p+"assets/img/developer-overview.5f6962da.png"}}]);