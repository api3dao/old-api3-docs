(window.webpackJsonp=window.webpackJsonp||[]).push([[617],{1343:function(e,t,a){"use strict";a.r(t);var s=a(9),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("TitleSpan",[e._v(e._s(e.$frontmatter.folder))]),e._v(" "),a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("VersionWarning"),e._v(" "),a("TocHeader"),e._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,4]}}),e._v(" "),a("p",[e._v("Airnode supports different strategies to calculate the gas price that it should\nuse for submitting transactions. These can be defined in the "),a("code",[e._v("config.json")]),e._v(".")]),e._v(" "),a("p",[e._v("The supported strategies include:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("latestBlockPercentileGasPrice")])]),e._v(" "),a("li",[a("code",[e._v("providerRecommendedGasPrice")])]),e._v(" "),a("li",[a("code",[e._v("providerRecommendedEip1559GasPrice")])]),e._v(" "),a("li",[a("code",[e._v("constantGasPrice")])])]),e._v(" "),a("p",[e._v("The strategies are attempted in the order that they are defined in "),a("code",[e._v("config.json")]),e._v("\nwhere the Airnode will move on to the next strategy in the list if the current\nfails. The only required strategy to be included is "),a("code",[e._v("constantGasPrice")]),e._v(" which is\nintended to be used as the final fallback if all other strategies fail to return\na gas price. Therefore, "),a("code",[e._v("constantGasPrice")]),e._v(" should be set as the last strategy in\nthe list.")]),e._v(" "),a("h2",{attrs:{id:"latestblockpercentilegasprice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#latestblockpercentilegasprice"}},[e._v("#")]),e._v(" latestBlockPercentileGasPrice")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("latestBlockPercentileGasPrice")]),e._v(" strategy calculates a gas price based on the\nspecified percentile of previous transactions in recent blocks and sets the\ntransaction to "),a("code",[e._v("type 0")]),e._v(" and a "),a("code",[e._v("gasPrice")]),e._v(" value. The parameters that the strategy\nuses to calculate the gas price can be configured.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latestBlockPercentileGasPrice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"percentile"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"minTransactionCount"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"pastToCompareInBlocks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxDeviationMultiplier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h3",{attrs:{id:"percentile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#percentile"}},[e._v("#")]),e._v(" "),a("code",[e._v("percentile")])]),e._v(" "),a("p",[e._v("(required) - The percentile of gas prices to return from a block.")]),e._v(" "),a("h3",{attrs:{id:"mintransactioncount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mintransactioncount"}},[e._v("#")]),e._v(" "),a("code",[e._v("minTransactionCount")])]),e._v(" "),a("p",[e._v("(required) - The minimum amount of transactions required in a block to use for\ncalculating a gas price percentile.")]),e._v(" "),a("h3",{attrs:{id:"pasttocompareinblocks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pasttocompareinblocks"}},[e._v("#")]),e._v(" "),a("code",[e._v("pastToCompareInBlocks")])]),e._v(" "),a("p",[e._v("(required) - The number of blocks to look back for the reference block.")]),e._v(" "),a("h3",{attrs:{id:"maxdeviationmultiplier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maxdeviationmultiplier"}},[e._v("#")]),e._v(" "),a("code",[e._v("maxDeviationMultiplier")])]),e._v(" "),a("p",[e._v("(required) - The maximum deviation multiplier of the latest block gas price\npercentile compared to the reference block gas price percentile. Used to protect\nagainst large gas price spikes.")]),e._v(" "),a("h2",{attrs:{id:"providerrecommendedgasprice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#providerrecommendedgasprice"}},[e._v("#")]),e._v(" providerRecommendedGasPrice")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("providerRecommendedGasPrice")]),e._v(" strategy gets a gas price estimate from the\nprovider, applies the defined multiplier to it and sets the transaction\nto"),a("code",[e._v("type 0")]),e._v(" and a "),a("code",[e._v("gasPrice")]),e._v(" value.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedGasPrice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"recommendedGasPriceMultiplier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"recommendedgaspricemultiplier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recommendedgaspricemultiplier"}},[e._v("#")]),e._v(" "),a("code",[e._v("recommendedGasPriceMultiplier")])]),e._v(" "),a("p",[e._v("(required) - A number with a maximum of two decimals that gets multiplied by the\nprovider reported gas price. The resulting Gas Price will equal\n"),a("code",[e._v("Gas Price * providerRecommendedGasPrice")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"providerrecommendedeip1559gasprice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#providerrecommendedeip1559gasprice"}},[e._v("#")]),e._v(" providerRecommendedEip1559GasPrice")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("providerRecommendedEip1559GasPrice")]),e._v(" strategy gets an EIP1559 fee data\nestimate from the provider and applies the configured "),a("code",[e._v("baseFeeMultiplier")]),e._v(" and\n"),a("code",[e._v("priorityFee")]),e._v(" values returning a "),a("code",[e._v("type 2")]),e._v(" transaction with "),a("code",[e._v("maxFeePerGas")]),e._v(" and\n"),a("code",[e._v("maxPriorityFeePerGas")]),e._v(" values.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedEip1559GasPrice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"baseFeeMultiplier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"priorityFee"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h3",{attrs:{id:"basefeemultiplier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basefeemultiplier"}},[e._v("#")]),e._v(" "),a("code",[e._v("baseFeeMultiplier")])]),e._v(" "),a("p",[e._v("(required) - Number multiplied by the Base Fee to yield the Maximum Fee for\nEIP-1559 transactions. Defaults to: "),a("code",[e._v("2")]),e._v(". The resulting Maximum Fee will equal\n"),a("code",[e._v("(Base Fee * baseFeeMultiplier) + priorityFee")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"priorityfee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee"}},[e._v("#")]),e._v(" "),a("code",[e._v("priorityFee")])]),e._v(" "),a("p",[e._v("(required) - An object that configures the EIP-1559 Priority Fee. Defaults:\n"),a("code",[e._v('{"value": 3.12, "unit": "gwei"}')]),e._v(".")]),e._v(" "),a("div",{staticStyle:{"margin-left":"32px"}},[a("h4",{attrs:{id:"priorityfee-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee-value"}},[e._v("#")]),e._v(" "),a("code",[e._v("priorityFee.value")])]),e._v(" "),a("p",[e._v("(required) - A number specifying the EIP-1559 priority fee value.")]),e._v(" "),a("h4",{attrs:{id:"priorityfee-unit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee-unit"}},[e._v("#")]),e._v(" "),a("code",[e._v("priorityFee.unit")])]),e._v(" "),a("p",[e._v("(required) - The unit of the priority fee value. It can be one of the following:\n(wei, kwei, mwei, gwei, szabo, finney, ether).")])]),e._v(" "),a("h2",{attrs:{id:"constantgasprice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constantgasprice"}},[e._v("#")]),e._v(" constantGasPrice")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("constantGasPrice")]),e._v(" strategy returns a "),a("code",[e._v("type 0")]),e._v(" gas price with the configured\n"),a("code",[e._v("gasPrice")]),e._v(" value. This strategy is intended to be used as a fallback in the case\nthat the other strategies fail to return a gas price.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"constantGasPrice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPrice"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h3",{attrs:{id:"gasprice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gasprice"}},[e._v("#")]),e._v(" "),a("code",[e._v("gasPrice")])]),e._v(" "),a("p",[e._v("(required) - An object of the form "),a("code",[e._v('{"value": 0, "unit": "wei"}')]),e._v(" that configures\nthe amount to use as gas price.")]),e._v(" "),a("div",{staticStyle:{"margin-left":"32px"}},[a("h4",{attrs:{id:"gasprice-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gasprice-value"}},[e._v("#")]),e._v(" "),a("code",[e._v("gasPrice.value")])]),e._v(" "),a("p",[e._v("(required) - A number specifying the "),a("code",[e._v("gasPrice")]),e._v(" value.")]),e._v(" "),a("h4",{attrs:{id:"gasprice-unit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gasprice-unit"}},[e._v("#")]),e._v(" "),a("code",[e._v("gasPrice.unit")])]),e._v(" "),a("p",[e._v("(required) The unit of the "),a("code",[e._v("gasPrice")]),e._v(" value. It can be one of the following:\n(wei, kwei, mwei, gwei, szabo, finney, ether).")])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);