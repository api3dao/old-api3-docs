(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{880:function(e,t,s){"use strict";s.r(t);var a=s(9),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("TitleSpan",[e._v(e._s(e.$frontmatter.folder))]),e._v(" "),s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),s("VersionWarning"),e._v(" "),s("TocHeader"),e._v(" "),s("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,4]}}),e._v(" "),s("p",[e._v("Airnode supports different strategies to calculate the gas price that it should\nuse for submitting transactions. These can be defined in the "),s("code",[e._v("config.json")]),e._v(" using\nthe "),s("code",[e._v("chains.options.gasPriceOracle")]),e._v(" field.")]),e._v(" "),s("p",[e._v("The supported strategies include:")]),e._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/airnode/v0.10/concepts/gas-prices.html#latestblockpercentilegasprice"}},[e._v("latestBlockPercentileGasPrice")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/airnode/v0.10/concepts/gas-prices.html#providerrecommendedgasprice"}},[e._v("providerRecommendedGasPrice")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/airnode/v0.10/concepts/gas-prices.html#providerrecommendedeip1559gasprice"}},[e._v("providerRecommendedEip1559GasPrice")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/airnode/v0.10/concepts/gas-prices.html#constantgasprice"}},[e._v("constantGasPrice")])],1)]),e._v(" "),s("p",[e._v("Below are examples of each strategy.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// latestBlockPercentileGasPrice")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latestBlockPercentileGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"percentile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"minTransactionCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"pastToCompareInBlocks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxDeviationMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// providerRecommendedGasPrice")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"recommendedGasPriceMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// providerRecommendedEip1559GasPrice")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedEip1559GasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"baseFeeMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"priorityFee"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// constantGasPrice")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"constantGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPrice"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br")])]),s("p",[e._v("The strategies are attempted in the order that they are defined in "),s("code",[e._v("config.json")]),e._v("\nwhere the Airnode will move on to the next strategy in the list if the current\nfails. The only required strategy to be included is "),s("code",[e._v("constantGasPrice")]),e._v(" which is\nintended to be used as the final fallback if all other strategies fail to return\na gas price. Therefore, "),s("code",[e._v("constantGasPrice")]),e._v(" should be set as the last strategy in\nthe list.")]),e._v(" "),s("p",[e._v("It does not make sense to mix and match eip1559\n("),s("code",[e._v("providerRecommendedEip1559GasPrice")]),e._v(") and non-eip1559\n("),s("code",[e._v("providerRecommendedGasPrice")]),e._v(") strategies though it can be done. The best\npractice is to use one or the other.")]),e._v(" "),s("h2",{attrs:{id:"latestblockpercentilegasprice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#latestblockpercentilegasprice"}},[e._v("#")]),e._v(" latestBlockPercentileGasPrice")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("latestBlockPercentileGasPrice")]),e._v(" strategy calculates a gas price based on the\nspecified percentile of previous transactions in recent blocks and sets the\ntransaction to "),s("code",[e._v("type 0")]),e._v(" and a "),s("code",[e._v("gasPrice")]),e._v(" value. The parameters that the strategy\nuses to calculate the gas price can be configured. This strategy can fail with\nlocal hardhat nodes because the chain may not have enough blocks.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"latestBlockPercentileGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"percentile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"minTransactionCount"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"pastToCompareInBlocks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"maxDeviationMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("h3",{attrs:{id:"percentile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#percentile"}},[e._v("#")]),e._v(" "),s("code",[e._v("percentile")])]),e._v(" "),s("p",[e._v("(required) - The percentile of gas prices to return from a block.")]),e._v(" "),s("h3",{attrs:{id:"mintransactioncount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mintransactioncount"}},[e._v("#")]),e._v(" "),s("code",[e._v("minTransactionCount")])]),e._v(" "),s("p",[e._v("(required) - The minimum amount of transactions required in a block to use for\ncalculating a gas price percentile.")]),e._v(" "),s("h3",{attrs:{id:"pasttocompareinblocks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pasttocompareinblocks"}},[e._v("#")]),e._v(" "),s("code",[e._v("pastToCompareInBlocks")])]),e._v(" "),s("p",[e._v("(required) - The number of blocks to look back for the reference block.")]),e._v(" "),s("h3",{attrs:{id:"maxdeviationmultiplier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxdeviationmultiplier"}},[e._v("#")]),e._v(" "),s("code",[e._v("maxDeviationMultiplier")])]),e._v(" "),s("p",[e._v("(required) - The maximum deviation multiplier of the latest block gas price\npercentile compared to the reference block gas price percentile. Used to protect\nagainst large gas price spikes.")]),e._v(" "),s("h2",{attrs:{id:"providerrecommendedgasprice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#providerrecommendedgasprice"}},[e._v("#")]),e._v(" providerRecommendedGasPrice")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("providerRecommendedGasPrice")]),e._v(" strategy gets a gas price estimate from the\nprovider, applies the defined multiplier to it and sets the transaction\nto"),s("code",[e._v("type 0")]),e._v(" and a "),s("code",[e._v("gasPrice")]),e._v(" value.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"recommendedGasPriceMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"recommendedgaspricemultiplier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recommendedgaspricemultiplier"}},[e._v("#")]),e._v(" "),s("code",[e._v("recommendedGasPriceMultiplier")])]),e._v(" "),s("p",[e._v("(required) - A number with a maximum of two decimals that gets multiplied by the\nprovider reported gas price. The resulting Gas Price will equal\n"),s("code",[e._v("Gas Price * providerRecommendedGasPrice")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"providerrecommendedeip1559gasprice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#providerrecommendedeip1559gasprice"}},[e._v("#")]),e._v(" providerRecommendedEip1559GasPrice")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("providerRecommendedEip1559GasPrice")]),e._v(" strategy gets an EIP1559 fee data\nestimate from the provider and applies the configured "),s("code",[e._v("baseFeeMultiplier")]),e._v(" and\n"),s("code",[e._v("priorityFee")]),e._v(" values returning a "),s("code",[e._v("type 2")]),e._v(" transaction with "),s("code",[e._v("maxFeePerGas")]),e._v(" and\n"),s("code",[e._v("maxPriorityFeePerGas")]),e._v(" values.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"providerRecommendedEip1559GasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"baseFeeMultiplier"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"priorityFee"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h3",{attrs:{id:"basefeemultiplier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basefeemultiplier"}},[e._v("#")]),e._v(" "),s("code",[e._v("baseFeeMultiplier")])]),e._v(" "),s("p",[e._v("(required) - Number multiplied by the Base Fee to yield the Maximum Fee for\nEIP-1559 transactions. Defaults to: "),s("code",[e._v("2")]),e._v(". The resulting Maximum Fee will equal\n"),s("code",[e._v("(Base Fee * baseFeeMultiplier) + priorityFee")]),e._v(".")]),e._v(" "),s("h3",{attrs:{id:"priorityfee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee"}},[e._v("#")]),e._v(" "),s("code",[e._v("priorityFee")])]),e._v(" "),s("p",[e._v("(required) - An object that configures the EIP-1559 Priority Fee. Defaults:\n"),s("code",[e._v('{"value": 3.12, "unit": "gwei"}')]),e._v(".")]),e._v(" "),s("div",{staticStyle:{"margin-left":"32px"}},[s("h4",{attrs:{id:"priorityfee-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee-value"}},[e._v("#")]),e._v(" "),s("code",[e._v("priorityFee.value")])]),e._v(" "),s("p",[e._v("(required) - A number specifying the EIP-1559 priority fee value.")]),e._v(" "),s("h4",{attrs:{id:"priorityfee-unit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priorityfee-unit"}},[e._v("#")]),e._v(" "),s("code",[e._v("priorityFee.unit")])]),e._v(" "),s("p",[e._v("(required) - The unit of the priority fee value. It can be one of the following:\n(wei, kwei, mwei, gwei, szabo, finney, ether).")])]),e._v(" "),s("h2",{attrs:{id:"constantgasprice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constantgasprice"}},[e._v("#")]),e._v(" constantGasPrice")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("constantGasPrice")]),e._v(" strategy returns a "),s("code",[e._v("type 0")]),e._v(" gas price with the configured\n"),s("code",[e._v("gasPrice")]),e._v(" value. This strategy is intended to be used as a fallback in the case\nthat the other strategies fail to return a gas price.")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPriceStrategy"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"constantGasPrice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gasPrice"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gwei"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("h3",{attrs:{id:"gasprice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gasprice"}},[e._v("#")]),e._v(" "),s("code",[e._v("gasPrice")])]),e._v(" "),s("p",[e._v("(required) - An object of the form "),s("code",[e._v('{"value": 0, "unit": "wei"}')]),e._v(" that configures\nthe amount to use as gas price.")]),e._v(" "),s("div",{staticStyle:{"margin-left":"32px"}},[s("h4",{attrs:{id:"gasprice-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gasprice-value"}},[e._v("#")]),e._v(" "),s("code",[e._v("gasPrice.value")])]),e._v(" "),s("p",[e._v("(required) - A number specifying the "),s("code",[e._v("gasPrice")]),e._v(" value.")]),e._v(" "),s("h4",{attrs:{id:"gasprice-unit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gasprice-unit"}},[e._v("#")]),e._v(" "),s("code",[e._v("gasPrice.unit")])]),e._v(" "),s("p",[e._v("(required) The unit of the "),s("code",[e._v("gasPrice")]),e._v(" value. It can be one of the following:\n(wei, kwei, mwei, gwei, szabo, finney, ether).")])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);